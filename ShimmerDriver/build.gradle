apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
archivesBaseName = 'ShimmerDriverML'

/*Rev0.2
* - fixes for shimmer2r and writeSensors not working after streaming
*/
version = '0.2' 


repositories {
	jcenter()
    mavenCentral()
    flatDir {
       dirs 'libs'
   }
}

sourceSets {
    main
}

/*
sourceSets {
    main {
        java{
        	srcDirs 'src'
        	exclude 'com/shimmerresearch/driver/ShimmerGQ_802154_SD.java'
        	}
       }
}
*/

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',  
        	'Implementation-Version': version,
        	'Main-Class': 'com.shimmerresearch.driver'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

//create a single Jar without dependencies
task singleJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',  
        	'Implementation-Version': version,
        	'Main-Class': 'com.shimmerresearch.driver'
    }
    baseName = project.name
    jar {
     from sourceSets.main.allSource
 	}
    with jar
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "C:/")
    }
}

jar {
      manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

dependencies {
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
	compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6'
	compile group: 'org.apache.commons', name: 'commons-math', version: '2.2'
	compile group: 'com.google.guava', name: 'guava', version: '19.0'
   
	// https://mvnrepository.com/artifact/javax.vecmath/vecmath
	//compile group: 'javax.vecmath', name: 'vecmath', version: '1.5.2'
	compile group: 'java3d', name: 'vecmath', version: '1.3.1'
   
	//compile name: 'ShimmerBiophysicalProcessingLibrary_Rev_0_11'
	compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	testCompile group: 'junit', name: 'junit', version: '4.+'
	compile 'com.google.protobuf:protobuf-java:3.0.0-beta-4'
   //compile 'io.grpc:grpc-all:0.14.0'
   // https://mvnrepository.com/artifact/io.grpc/grpc-all
	compile group: 'io.grpc', name: 'grpc-all', version: '1.0.0-pre1'
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'
	// https://mvnrepository.com/artifact/com.codeminders/hidapi
	compile group: 'com.codeminders', name: 'hidapi', version: '1.1'
	// https://mvnrepository.com/artifact/joda-time/joda-time
	compile group: 'joda-time', name: 'joda-time', version: '2.9.4'
	// https://mvnrepository.com/artifact/com.github.wendykierp/JTransforms
	compile group: 'com.github.wendykierp', name: 'JTransforms', version: '3.1'
	// https://mvnrepository.com/artifact/com.google.protobuf/protobuf-lite
	compile group: 'com.google.protobuf', name: 'protobuf-lite', version: '3.0.1'
	
	
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    	    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
} 

