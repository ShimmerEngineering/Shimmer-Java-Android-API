apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

/*
Rev0.3
- switch to using jfrog

Rev0.2
- fixes for shimmer2r and writeSensors not working after streaming
*/

//This version should match the git release tag
//version = '0.9.148alpha' 
apply plugin: 'java-library'
sourceCompatibility = 1.11
targetCompatibility = 1.11

repositories {
    mavenCentral()
    mavenLocal()
}

/*
publishing {
    publications {
        mavenJava(MavenPublication) {
           groupId = 'com.shimmersensing'
           artifactId = 'ShimmerDriverDev'
           version = project.version
           from components.java
        }
    }
}
*/

test {
    //exclude '**/*'
    exclude 'com/shimmerresearch/driver/API_00005_Suite_ShimmerDriver.class'
    exclude 'com/shimmerresearch/algorithms/API_00002_Filters.class'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = 'com.shimmerresearch' // Replace with your package's group/organization name
            artifactId = 'shimmerdriver' // Replace with the name of your package
            version = '0.11.3_beta' // Replace with your package version

            // Jar publication
            //(
            //artifact sourceJar {
            //    classifier 'sources'
            //}
        }
    }


    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ShimmerEngineering/Shimmer-Java-Android-API")
            credentials {
                /* Create gradle.properties file in GRADLE_USER_HOME/.gradle/ 
                (e.g. C:/Users/YourUsername/.gradle/) with the two lines listed below. Fill in your 
                Github ID and personal access token - as generated through the Github Developer 
                Settings page. The token needs to have "read:packages" scope enabled on it: 
                    gpr.usr=GITHUB_USER_ID 
                    gpr.key=PERSONAL_ACCESS_TOKEN 
                */
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }    
    }
}

dependencies {
    api group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    api group: 'org.apache.commons', name: 'commons-math3', version: '3.6'
    api group: 'org.apache.commons', name: 'commons-math', version: '2.2'
    api group: 'com.google.guava', name: 'guava', version: '19.0'

    // https://mvnrepository.com/artifact/java3d/vecmath
    api group: 'java3d', name: 'vecmath', version: '1.3.1'

    // https://mvnrepository.com/artifact/commons-collections/commons-collections
    api group: 'commons-collections', name: 'commons-collections', version: '3.2'

    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    api group: 'com.google.protobuf', name: 'protobuf-java', version: '3.4.0'

    // https://mvnrepository.com/artifact/io.grpc/grpc-all
    api group: 'io.grpc', name: 'grpc-all', version: '1.32.1'
    
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    api group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'
    
    // https://mvnrepository.com/artifact/com.codeminders/hidapi
    api group: 'com.codeminders', name: 'hidapi', version: '1.1'
    
    // https://mvnrepository.com/artifact/joda-time/joda-time
    api group: 'joda-time', name: 'joda-time', version: '2.9.4'
    
    // https://mvnrepository.com/artifact/com.github.wendykierp/JTransforms
    api group: 'com.github.wendykierp', name: 'JTransforms', version: '3.1'
    
    // The production code uses the SLF4J logging API at compile time
    api 'org.slf4j:slf4j-api:1.7.21'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.21.1'
    
    // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
    api("javax.annotation:javax.annotation-api:1.3.2")

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testImplementation 'junit:junit:4.13.2'

    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'

    // https://mvnrepository.com/artifact/junit/junit
    testImplementation group: 'junit', name: 'junit', version: '4.+'

    api 'com.parse.bolts:bolts-tasks:1.4.0'
} 

