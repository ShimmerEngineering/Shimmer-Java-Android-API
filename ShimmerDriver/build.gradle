apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'
//apply plugin: 'com.jfrog.artifactory'

/*
Rev0.3
- switch to using jfrog

Rev0.2
- fixes for shimmer2r and writeSensors not working after streaming
*/

//This version should match the git release tag
//version = '0.9.148alpha' 

sourceCompatibility = 1.8
targetCompatibility = 1.8

/*
buildscript {
    repositories {
        maven {
            url 'https://shimmersensing.jfrog.io/artifactory/ShimmerAPI'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
        mavenCentral()
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.+')
    }
    configurations.classpath {
        resolutionStrategy {
	    	//Added to circumvent warnings thrown when building
	    	//Sets the length of time that dynamic versions will be cached.
            cacheDynamicVersionsFor 0, 'seconds'
	    	//Sets the length of time that changing modules will be cached.
            cacheChangingModulesFor 0, 'seconds'
        }
    }
}
*/
repositories {
    mavenCentral()
    mavenLocal()
}



/*
artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = 'ShimmerAPI'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
        publishBuildInfo = true
        publishArtifacts = true
        publishPom = true
    }
    resolve {
        repository {
            repoKey = 'ShimmerAPI'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}
*/

/*
publishing {
    publications {
        mavenJava(MavenPublication) {
           groupId = 'com.shimmersensing'
           artifactId = 'ShimmerDriverDev'
           version = project.version
           from components.java
        }
    }
}
*/

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = 'com.shimmerresearch' // Replace with your package's group/organization name
            artifactId = 'shimmerdriver' // Replace with the name of your package
            version = '0.10.0_alpha' // Replace with your package version

            // Jar publication
            /*(
            artifact sourceJar {
                classifier 'sources'
            }*/
        }
    }


    repositories {
		maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ShimmerEngineering/Shimmer-Java-Android-API")
            credentials {
                username = "useyourowncredentialshere"
                password = "useyourowncredentialshere"
            }
        }    
    }
}

dependencies {
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
	compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6'
	compile group: 'org.apache.commons', name: 'commons-math', version: '2.2'
	compile group: 'com.google.guava', name: 'guava', version: '19.0'
   
	// https://mvnrepository.com/artifact/java3d/vecmath
	compile group: 'java3d', name: 'vecmath', version: '1.3.1'
   
   	// https://mvnrepository.com/artifact/commons-collections/commons-collections
	compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	
	// https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
	compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.4.0'

   	// https://mvnrepository.com/artifact/io.grpc/grpc-all
    	compile group: 'io.grpc', name: 'grpc-all', version: '1.32.1'
	
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'
	
	// https://mvnrepository.com/artifact/com.codeminders/hidapi
	compile group: 'com.codeminders', name: 'hidapi', version: '1.1'
	
	// https://mvnrepository.com/artifact/joda-time/joda-time
	compile group: 'joda-time', name: 'joda-time', version: '2.9.4'
	
	// https://mvnrepository.com/artifact/com.github.wendykierp/JTransforms
	compile group: 'com.github.wendykierp', name: 'JTransforms', version: '3.1'
	
    	// The production code uses the SLF4J logging API at compile time
    	compile 'org.slf4j:slf4j-api:1.7.21'
	
	// https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
    	compile("javax.annotation:javax.annotation-api:1.3.2")
    	
	// Declare the dependency for your favourite test framework you want to use in your tests.
    	// TestNG is also supported by the Gradle Test task. Just change the
    	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    	// 'test.useTestNG()' to your build script.
    	testCompile 'junit:junit:4.13.2'
    
    	// https://mvnrepository.com/artifact/org.mockito/mockito-all
	testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    	
	// https://mvnrepository.com/artifact/junit/junit
	testCompile group: 'junit', name: 'junit', version: '4.+'

    compile 'com.parse.bolts:bolts-tasks:1.4.0'
} 

