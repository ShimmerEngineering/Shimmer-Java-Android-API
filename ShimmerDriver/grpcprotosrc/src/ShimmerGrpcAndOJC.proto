//import "C:/Users/Lim/git/Shimmer-Java-Android-API/ShimmerDriver/grpcprotosrc/src/LiteProtocolInstructionSet.proto";

syntax = "proto3";
import "src/LiteProtocolInstructionSet.proto";

import "google/protobuf/descriptor.proto";

option csharp_namespace = "com.shimmerresearch.grpc";
option java_package = "com.shimmerresearch.grpc";
option java_outer_classname = "ShimmerGRPC";

package shimmerGRPC;

// The greeter service definition.
service ShimmerServer {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  
  rpc GetDataStream(StreamRequest) returns (stream ObjectCluster2) {}
  
  rpc SendDataStream(stream ObjectCluster2) returns (HelloReply){}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message StreamRequest {
  string message = 1;
}

message ObjectCluster2 {
  string name = 1;
  string bluetoothAddress = 2;
  
  enum CommunicationType {
    BT = 0;
    SD = 1;
    Radio_802_15_4 = 2;
  }
  
  CommunicationType communicationType = 3;

  message FormatCluster2 {
  	
  	message DataCluster2{
  		string unit = 1;
    	double data = 2;	
    	repeated double dataArray = 3;
  	}
  	map<string, DataCluster2> formatMap = 1;  
    
  }
  map<string,FormatCluster2> dataMap = 4;
  
  int64 systemTime = 5;
  double calibratedTimeStamp = 6;
}
