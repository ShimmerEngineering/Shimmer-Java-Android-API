# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/ShimmerGrpcAndOJC.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/ShimmerGrpcAndOJC.proto',
  package='shimmerGRPC',
  syntax='proto3',
  serialized_pb=_b('\n\x1bsrc/ShimmerGrpcAndOJC.proto\x12\x0bshimmerGRPC\x1a google/protobuf/descriptor.proto\"5\n\x04\x46ile\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12\x11\n\tendoffile\x18\x03 \x01(\x08\"\x1f\n\rCommandStatus\x12\x0e\n\x06status\x18\x01 \x01(\t\"\x1c\n\x0cHelloRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1d\n\nHelloReply\x12\x0f\n\x07message\x18\x01 \x01(\t\"!\n\x0eShimmerRequest\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\" \n\rStreamRequest\x12\x0f\n\x07message\x18\x01 \x01(\t\"\x8e\x05\n\x0eObjectCluster2\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x18\n\x10\x62luetoothAddress\x18\x02 \x01(\t\x12H\n\x11\x63ommunicationType\x18\x03 \x01(\x0e\x32-.shimmerGRPC.ObjectCluster2.CommunicationType\x12\x39\n\x07\x64\x61taMap\x18\x04 \x03(\x0b\x32(.shimmerGRPC.ObjectCluster2.DataMapEntry\x12\x12\n\nsystemTime\x18\x05 \x01(\x03\x12\x1b\n\x13\x63\x61libratedTimeStamp\x18\x06 \x01(\x01\x1a\x88\x02\n\x0e\x46ormatCluster2\x12L\n\tformatMap\x18\x01 \x03(\x0b\x32\x39.shimmerGRPC.ObjectCluster2.FormatCluster2.FormatMapEntry\x1a=\n\x0c\x44\x61taCluster2\x12\x0c\n\x04unit\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x01\x12\x11\n\tdataArray\x18\x03 \x03(\x01\x1ai\n\x0e\x46ormatMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x46\n\x05value\x18\x02 \x01(\x0b\x32\x37.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2:\x02\x38\x01\x1aZ\n\x0c\x44\x61taMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x39\n\x05value\x18\x02 \x01(\x0b\x32*.shimmerGRPC.ObjectCluster2.FormatCluster2:\x02\x38\x01\"7\n\x11\x43ommunicationType\x12\x06\n\x02\x42T\x10\x00\x12\x06\n\x02SD\x10\x01\x12\x12\n\x0eRadio_802_15_4\x10\x02\x32\xc7\x03\n\rShimmerServer\x12@\n\x08SayHello\x12\x19.shimmerGRPC.HelloRequest\x1a\x17.shimmerGRPC.HelloReply\"\x00\x12L\n\rGetDataStream\x12\x1a.shimmerGRPC.StreamRequest\x1a\x1b.shimmerGRPC.ObjectCluster2\"\x00\x30\x01\x12J\n\x0eSendDataStream\x12\x1b.shimmerGRPC.ObjectCluster2\x1a\x17.shimmerGRPC.HelloReply\"\x00(\x01\x12@\n\x0eSendFileStream\x12\x11.shimmerGRPC.File\x1a\x17.shimmerGRPC.HelloReply\"\x00(\x01\x12K\n\x0e\x43onnectShimmer\x12\x1b.shimmerGRPC.ShimmerRequest\x1a\x1a.shimmerGRPC.CommandStatus\"\x00\x12K\n\x0eStartStreaming\x12\x1b.shimmerGRPC.ShimmerRequest\x1a\x1a.shimmerGRPC.CommandStatus\"\x00\x42\x42\n\x18\x63om.shimmerresearch.grpcB\x0bShimmerGRPC\xaa\x02\x18\x63om.shimmerresearch.grpcb\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_descriptor__pb2.DESCRIPTOR,])



_OBJECTCLUSTER2_COMMUNICATIONTYPE = _descriptor.EnumDescriptor(
  name='CommunicationType',
  full_name='shimmerGRPC.ObjectCluster2.CommunicationType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SD', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Radio_802_15_4', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=896,
  serialized_end=951,
)
_sym_db.RegisterEnumDescriptor(_OBJECTCLUSTER2_COMMUNICATIONTYPE)


_FILE = _descriptor.Descriptor(
  name='File',
  full_name='shimmerGRPC.File',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='shimmerGRPC.File.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='shimmerGRPC.File.data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='endoffile', full_name='shimmerGRPC.File.endoffile', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=78,
  serialized_end=131,
)


_COMMANDSTATUS = _descriptor.Descriptor(
  name='CommandStatus',
  full_name='shimmerGRPC.CommandStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='shimmerGRPC.CommandStatus.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=133,
  serialized_end=164,
)


_HELLOREQUEST = _descriptor.Descriptor(
  name='HelloRequest',
  full_name='shimmerGRPC.HelloRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='shimmerGRPC.HelloRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=166,
  serialized_end=194,
)


_HELLOREPLY = _descriptor.Descriptor(
  name='HelloReply',
  full_name='shimmerGRPC.HelloReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='shimmerGRPC.HelloReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=196,
  serialized_end=225,
)


_SHIMMERREQUEST = _descriptor.Descriptor(
  name='ShimmerRequest',
  full_name='shimmerGRPC.ShimmerRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='shimmerGRPC.ShimmerRequest.address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=227,
  serialized_end=260,
)


_STREAMREQUEST = _descriptor.Descriptor(
  name='StreamRequest',
  full_name='shimmerGRPC.StreamRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='shimmerGRPC.StreamRequest.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=262,
  serialized_end=294,
)


_OBJECTCLUSTER2_FORMATCLUSTER2_DATACLUSTER2 = _descriptor.Descriptor(
  name='DataCluster2',
  full_name='shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='unit', full_name='shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.unit', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.data', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dataArray', full_name='shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.dataArray', index=2,
      number=3, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=634,
  serialized_end=695,
)

_OBJECTCLUSTER2_FORMATCLUSTER2_FORMATMAPENTRY = _descriptor.Descriptor(
  name='FormatMapEntry',
  full_name='shimmerGRPC.ObjectCluster2.FormatCluster2.FormatMapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='shimmerGRPC.ObjectCluster2.FormatCluster2.FormatMapEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='shimmerGRPC.ObjectCluster2.FormatCluster2.FormatMapEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=697,
  serialized_end=802,
)

_OBJECTCLUSTER2_FORMATCLUSTER2 = _descriptor.Descriptor(
  name='FormatCluster2',
  full_name='shimmerGRPC.ObjectCluster2.FormatCluster2',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='formatMap', full_name='shimmerGRPC.ObjectCluster2.FormatCluster2.formatMap', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_OBJECTCLUSTER2_FORMATCLUSTER2_DATACLUSTER2, _OBJECTCLUSTER2_FORMATCLUSTER2_FORMATMAPENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=538,
  serialized_end=802,
)

_OBJECTCLUSTER2_DATAMAPENTRY = _descriptor.Descriptor(
  name='DataMapEntry',
  full_name='shimmerGRPC.ObjectCluster2.DataMapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='shimmerGRPC.ObjectCluster2.DataMapEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='shimmerGRPC.ObjectCluster2.DataMapEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=804,
  serialized_end=894,
)

_OBJECTCLUSTER2 = _descriptor.Descriptor(
  name='ObjectCluster2',
  full_name='shimmerGRPC.ObjectCluster2',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='shimmerGRPC.ObjectCluster2.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bluetoothAddress', full_name='shimmerGRPC.ObjectCluster2.bluetoothAddress', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='communicationType', full_name='shimmerGRPC.ObjectCluster2.communicationType', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dataMap', full_name='shimmerGRPC.ObjectCluster2.dataMap', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='systemTime', full_name='shimmerGRPC.ObjectCluster2.systemTime', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='calibratedTimeStamp', full_name='shimmerGRPC.ObjectCluster2.calibratedTimeStamp', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_OBJECTCLUSTER2_FORMATCLUSTER2, _OBJECTCLUSTER2_DATAMAPENTRY, ],
  enum_types=[
    _OBJECTCLUSTER2_COMMUNICATIONTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=297,
  serialized_end=951,
)

_OBJECTCLUSTER2_FORMATCLUSTER2_DATACLUSTER2.containing_type = _OBJECTCLUSTER2_FORMATCLUSTER2
_OBJECTCLUSTER2_FORMATCLUSTER2_FORMATMAPENTRY.fields_by_name['value'].message_type = _OBJECTCLUSTER2_FORMATCLUSTER2_DATACLUSTER2
_OBJECTCLUSTER2_FORMATCLUSTER2_FORMATMAPENTRY.containing_type = _OBJECTCLUSTER2_FORMATCLUSTER2
_OBJECTCLUSTER2_FORMATCLUSTER2.fields_by_name['formatMap'].message_type = _OBJECTCLUSTER2_FORMATCLUSTER2_FORMATMAPENTRY
_OBJECTCLUSTER2_FORMATCLUSTER2.containing_type = _OBJECTCLUSTER2
_OBJECTCLUSTER2_DATAMAPENTRY.fields_by_name['value'].message_type = _OBJECTCLUSTER2_FORMATCLUSTER2
_OBJECTCLUSTER2_DATAMAPENTRY.containing_type = _OBJECTCLUSTER2
_OBJECTCLUSTER2.fields_by_name['communicationType'].enum_type = _OBJECTCLUSTER2_COMMUNICATIONTYPE
_OBJECTCLUSTER2.fields_by_name['dataMap'].message_type = _OBJECTCLUSTER2_DATAMAPENTRY
_OBJECTCLUSTER2_COMMUNICATIONTYPE.containing_type = _OBJECTCLUSTER2
DESCRIPTOR.message_types_by_name['File'] = _FILE
DESCRIPTOR.message_types_by_name['CommandStatus'] = _COMMANDSTATUS
DESCRIPTOR.message_types_by_name['HelloRequest'] = _HELLOREQUEST
DESCRIPTOR.message_types_by_name['HelloReply'] = _HELLOREPLY
DESCRIPTOR.message_types_by_name['ShimmerRequest'] = _SHIMMERREQUEST
DESCRIPTOR.message_types_by_name['StreamRequest'] = _STREAMREQUEST
DESCRIPTOR.message_types_by_name['ObjectCluster2'] = _OBJECTCLUSTER2
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

File = _reflection.GeneratedProtocolMessageType('File', (_message.Message,), dict(
  DESCRIPTOR = _FILE,
  __module__ = 'src.ShimmerGrpcAndOJC_pb2'
  # @@protoc_insertion_point(class_scope:shimmerGRPC.File)
  ))
_sym_db.RegisterMessage(File)

CommandStatus = _reflection.GeneratedProtocolMessageType('CommandStatus', (_message.Message,), dict(
  DESCRIPTOR = _COMMANDSTATUS,
  __module__ = 'src.ShimmerGrpcAndOJC_pb2'
  # @@protoc_insertion_point(class_scope:shimmerGRPC.CommandStatus)
  ))
_sym_db.RegisterMessage(CommandStatus)

HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREQUEST,
  __module__ = 'src.ShimmerGrpcAndOJC_pb2'
  # @@protoc_insertion_point(class_scope:shimmerGRPC.HelloRequest)
  ))
_sym_db.RegisterMessage(HelloRequest)

HelloReply = _reflection.GeneratedProtocolMessageType('HelloReply', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREPLY,
  __module__ = 'src.ShimmerGrpcAndOJC_pb2'
  # @@protoc_insertion_point(class_scope:shimmerGRPC.HelloReply)
  ))
_sym_db.RegisterMessage(HelloReply)

ShimmerRequest = _reflection.GeneratedProtocolMessageType('ShimmerRequest', (_message.Message,), dict(
  DESCRIPTOR = _SHIMMERREQUEST,
  __module__ = 'src.ShimmerGrpcAndOJC_pb2'
  # @@protoc_insertion_point(class_scope:shimmerGRPC.ShimmerRequest)
  ))
_sym_db.RegisterMessage(ShimmerRequest)

StreamRequest = _reflection.GeneratedProtocolMessageType('StreamRequest', (_message.Message,), dict(
  DESCRIPTOR = _STREAMREQUEST,
  __module__ = 'src.ShimmerGrpcAndOJC_pb2'
  # @@protoc_insertion_point(class_scope:shimmerGRPC.StreamRequest)
  ))
_sym_db.RegisterMessage(StreamRequest)

ObjectCluster2 = _reflection.GeneratedProtocolMessageType('ObjectCluster2', (_message.Message,), dict(

  FormatCluster2 = _reflection.GeneratedProtocolMessageType('FormatCluster2', (_message.Message,), dict(

    DataCluster2 = _reflection.GeneratedProtocolMessageType('DataCluster2', (_message.Message,), dict(
      DESCRIPTOR = _OBJECTCLUSTER2_FORMATCLUSTER2_DATACLUSTER2,
      __module__ = 'src.ShimmerGrpcAndOJC_pb2'
      # @@protoc_insertion_point(class_scope:shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2)
      ))
    ,

    FormatMapEntry = _reflection.GeneratedProtocolMessageType('FormatMapEntry', (_message.Message,), dict(
      DESCRIPTOR = _OBJECTCLUSTER2_FORMATCLUSTER2_FORMATMAPENTRY,
      __module__ = 'src.ShimmerGrpcAndOJC_pb2'
      # @@protoc_insertion_point(class_scope:shimmerGRPC.ObjectCluster2.FormatCluster2.FormatMapEntry)
      ))
    ,
    DESCRIPTOR = _OBJECTCLUSTER2_FORMATCLUSTER2,
    __module__ = 'src.ShimmerGrpcAndOJC_pb2'
    # @@protoc_insertion_point(class_scope:shimmerGRPC.ObjectCluster2.FormatCluster2)
    ))
  ,

  DataMapEntry = _reflection.GeneratedProtocolMessageType('DataMapEntry', (_message.Message,), dict(
    DESCRIPTOR = _OBJECTCLUSTER2_DATAMAPENTRY,
    __module__ = 'src.ShimmerGrpcAndOJC_pb2'
    # @@protoc_insertion_point(class_scope:shimmerGRPC.ObjectCluster2.DataMapEntry)
    ))
  ,
  DESCRIPTOR = _OBJECTCLUSTER2,
  __module__ = 'src.ShimmerGrpcAndOJC_pb2'
  # @@protoc_insertion_point(class_scope:shimmerGRPC.ObjectCluster2)
  ))
_sym_db.RegisterMessage(ObjectCluster2)
_sym_db.RegisterMessage(ObjectCluster2.FormatCluster2)
_sym_db.RegisterMessage(ObjectCluster2.FormatCluster2.DataCluster2)
_sym_db.RegisterMessage(ObjectCluster2.FormatCluster2.FormatMapEntry)
_sym_db.RegisterMessage(ObjectCluster2.DataMapEntry)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\030com.shimmerresearch.grpcB\013ShimmerGRPC\252\002\030com.shimmerresearch.grpc'))
_OBJECTCLUSTER2_FORMATCLUSTER2_FORMATMAPENTRY.has_options = True
_OBJECTCLUSTER2_FORMATCLUSTER2_FORMATMAPENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_OBJECTCLUSTER2_DATAMAPENTRY.has_options = True
_OBJECTCLUSTER2_DATAMAPENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))

_SHIMMERSERVER = _descriptor.ServiceDescriptor(
  name='ShimmerServer',
  full_name='shimmerGRPC.ShimmerServer',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=954,
  serialized_end=1409,
  methods=[
  _descriptor.MethodDescriptor(
    name='SayHello',
    full_name='shimmerGRPC.ShimmerServer.SayHello',
    index=0,
    containing_service=None,
    input_type=_HELLOREQUEST,
    output_type=_HELLOREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetDataStream',
    full_name='shimmerGRPC.ShimmerServer.GetDataStream',
    index=1,
    containing_service=None,
    input_type=_STREAMREQUEST,
    output_type=_OBJECTCLUSTER2,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendDataStream',
    full_name='shimmerGRPC.ShimmerServer.SendDataStream',
    index=2,
    containing_service=None,
    input_type=_OBJECTCLUSTER2,
    output_type=_HELLOREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendFileStream',
    full_name='shimmerGRPC.ShimmerServer.SendFileStream',
    index=3,
    containing_service=None,
    input_type=_FILE,
    output_type=_HELLOREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ConnectShimmer',
    full_name='shimmerGRPC.ShimmerServer.ConnectShimmer',
    index=4,
    containing_service=None,
    input_type=_SHIMMERREQUEST,
    output_type=_COMMANDSTATUS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StartStreaming',
    full_name='shimmerGRPC.ShimmerServer.StartStreaming',
    index=5,
    containing_service=None,
    input_type=_SHIMMERREQUEST,
    output_type=_COMMANDSTATUS,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SHIMMERSERVER)

DESCRIPTOR.services_by_name['ShimmerServer'] = _SHIMMERSERVER

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ShimmerServerStub(object):
    """The greeter service definition.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.SayHello = channel.unary_unary(
          '/shimmerGRPC.ShimmerServer/SayHello',
          request_serializer=HelloRequest.SerializeToString,
          response_deserializer=HelloReply.FromString,
          )
      self.GetDataStream = channel.unary_stream(
          '/shimmerGRPC.ShimmerServer/GetDataStream',
          request_serializer=StreamRequest.SerializeToString,
          response_deserializer=ObjectCluster2.FromString,
          )
      self.SendDataStream = channel.stream_unary(
          '/shimmerGRPC.ShimmerServer/SendDataStream',
          request_serializer=ObjectCluster2.SerializeToString,
          response_deserializer=HelloReply.FromString,
          )
      self.SendFileStream = channel.stream_unary(
          '/shimmerGRPC.ShimmerServer/SendFileStream',
          request_serializer=File.SerializeToString,
          response_deserializer=HelloReply.FromString,
          )
      self.ConnectShimmer = channel.unary_unary(
          '/shimmerGRPC.ShimmerServer/ConnectShimmer',
          request_serializer=ShimmerRequest.SerializeToString,
          response_deserializer=CommandStatus.FromString,
          )
      self.StartStreaming = channel.unary_unary(
          '/shimmerGRPC.ShimmerServer/StartStreaming',
          request_serializer=ShimmerRequest.SerializeToString,
          response_deserializer=CommandStatus.FromString,
          )


  class ShimmerServerServicer(object):
    """The greeter service definition.
    """

    def SayHello(self, request, context):
      """Sends a greeting
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetDataStream(self, request, context):
      """Client asking for data
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendDataStream(self, request_iterator, context):
      """Client sending data
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendFileStream(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ConnectShimmer(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def StartStreaming(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ShimmerServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SayHello': grpc.unary_unary_rpc_method_handler(
            servicer.SayHello,
            request_deserializer=HelloRequest.FromString,
            response_serializer=HelloReply.SerializeToString,
        ),
        'GetDataStream': grpc.unary_stream_rpc_method_handler(
            servicer.GetDataStream,
            request_deserializer=StreamRequest.FromString,
            response_serializer=ObjectCluster2.SerializeToString,
        ),
        'SendDataStream': grpc.stream_unary_rpc_method_handler(
            servicer.SendDataStream,
            request_deserializer=ObjectCluster2.FromString,
            response_serializer=HelloReply.SerializeToString,
        ),
        'SendFileStream': grpc.stream_unary_rpc_method_handler(
            servicer.SendFileStream,
            request_deserializer=File.FromString,
            response_serializer=HelloReply.SerializeToString,
        ),
        'ConnectShimmer': grpc.unary_unary_rpc_method_handler(
            servicer.ConnectShimmer,
            request_deserializer=ShimmerRequest.FromString,
            response_serializer=CommandStatus.SerializeToString,
        ),
        'StartStreaming': grpc.unary_unary_rpc_method_handler(
            servicer.StartStreaming,
            request_deserializer=ShimmerRequest.FromString,
            response_serializer=CommandStatus.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'shimmerGRPC.ShimmerServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaShimmerServerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The greeter service definition.
    """
    def SayHello(self, request, context):
      """Sends a greeting
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetDataStream(self, request, context):
      """Client asking for data
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendDataStream(self, request_iterator, context):
      """Client sending data
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendFileStream(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ConnectShimmer(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def StartStreaming(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaShimmerServerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The greeter service definition.
    """
    def SayHello(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sends a greeting
      """
      raise NotImplementedError()
    SayHello.future = None
    def GetDataStream(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Client asking for data
      """
      raise NotImplementedError()
    def SendDataStream(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      """Client sending data
      """
      raise NotImplementedError()
    SendDataStream.future = None
    def SendFileStream(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendFileStream.future = None
    def ConnectShimmer(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ConnectShimmer.future = None
    def StartStreaming(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    StartStreaming.future = None


  def beta_create_ShimmerServer_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('shimmerGRPC.ShimmerServer', 'ConnectShimmer'): ShimmerRequest.FromString,
      ('shimmerGRPC.ShimmerServer', 'GetDataStream'): StreamRequest.FromString,
      ('shimmerGRPC.ShimmerServer', 'SayHello'): HelloRequest.FromString,
      ('shimmerGRPC.ShimmerServer', 'SendDataStream'): ObjectCluster2.FromString,
      ('shimmerGRPC.ShimmerServer', 'SendFileStream'): File.FromString,
      ('shimmerGRPC.ShimmerServer', 'StartStreaming'): ShimmerRequest.FromString,
    }
    response_serializers = {
      ('shimmerGRPC.ShimmerServer', 'ConnectShimmer'): CommandStatus.SerializeToString,
      ('shimmerGRPC.ShimmerServer', 'GetDataStream'): ObjectCluster2.SerializeToString,
      ('shimmerGRPC.ShimmerServer', 'SayHello'): HelloReply.SerializeToString,
      ('shimmerGRPC.ShimmerServer', 'SendDataStream'): HelloReply.SerializeToString,
      ('shimmerGRPC.ShimmerServer', 'SendFileStream'): HelloReply.SerializeToString,
      ('shimmerGRPC.ShimmerServer', 'StartStreaming'): CommandStatus.SerializeToString,
    }
    method_implementations = {
      ('shimmerGRPC.ShimmerServer', 'ConnectShimmer'): face_utilities.unary_unary_inline(servicer.ConnectShimmer),
      ('shimmerGRPC.ShimmerServer', 'GetDataStream'): face_utilities.unary_stream_inline(servicer.GetDataStream),
      ('shimmerGRPC.ShimmerServer', 'SayHello'): face_utilities.unary_unary_inline(servicer.SayHello),
      ('shimmerGRPC.ShimmerServer', 'SendDataStream'): face_utilities.stream_unary_inline(servicer.SendDataStream),
      ('shimmerGRPC.ShimmerServer', 'SendFileStream'): face_utilities.stream_unary_inline(servicer.SendFileStream),
      ('shimmerGRPC.ShimmerServer', 'StartStreaming'): face_utilities.unary_unary_inline(servicer.StartStreaming),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ShimmerServer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('shimmerGRPC.ShimmerServer', 'ConnectShimmer'): ShimmerRequest.SerializeToString,
      ('shimmerGRPC.ShimmerServer', 'GetDataStream'): StreamRequest.SerializeToString,
      ('shimmerGRPC.ShimmerServer', 'SayHello'): HelloRequest.SerializeToString,
      ('shimmerGRPC.ShimmerServer', 'SendDataStream'): ObjectCluster2.SerializeToString,
      ('shimmerGRPC.ShimmerServer', 'SendFileStream'): File.SerializeToString,
      ('shimmerGRPC.ShimmerServer', 'StartStreaming'): ShimmerRequest.SerializeToString,
    }
    response_deserializers = {
      ('shimmerGRPC.ShimmerServer', 'ConnectShimmer'): CommandStatus.FromString,
      ('shimmerGRPC.ShimmerServer', 'GetDataStream'): ObjectCluster2.FromString,
      ('shimmerGRPC.ShimmerServer', 'SayHello'): HelloReply.FromString,
      ('shimmerGRPC.ShimmerServer', 'SendDataStream'): HelloReply.FromString,
      ('shimmerGRPC.ShimmerServer', 'SendFileStream'): HelloReply.FromString,
      ('shimmerGRPC.ShimmerServer', 'StartStreaming'): CommandStatus.FromString,
    }
    cardinalities = {
      'ConnectShimmer': cardinality.Cardinality.UNARY_UNARY,
      'GetDataStream': cardinality.Cardinality.UNARY_STREAM,
      'SayHello': cardinality.Cardinality.UNARY_UNARY,
      'SendDataStream': cardinality.Cardinality.STREAM_UNARY,
      'SendFileStream': cardinality.Cardinality.STREAM_UNARY,
      'StartStreaming': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'shimmerGRPC.ShimmerServer', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
