// source: src/ShimmerGrpcAndOJC.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.shimmerGRPC.BoolMsg', null, global);
goog.exportSymbol('proto.shimmerGRPC.CommandStatus', null, global);
goog.exportSymbol('proto.shimmerGRPC.DoubleMsg', null, global);
goog.exportSymbol('proto.shimmerGRPC.EmulatedDevices', null, global);
goog.exportSymbol('proto.shimmerGRPC.EmulatedDevices.EmulatedDevice', null, global);
goog.exportSymbol('proto.shimmerGRPC.FileByteTransfer', null, global);
goog.exportSymbol('proto.shimmerGRPC.HelloReply', null, global);
goog.exportSymbol('proto.shimmerGRPC.HelloRequest', null, global);
goog.exportSymbol('proto.shimmerGRPC.Ieee802154Info', null, global);
goog.exportSymbol('proto.shimmerGRPC.InfoSpans', null, global);
goog.exportSymbol('proto.shimmerGRPC.InfoSpans.InfoSpan', null, global);
goog.exportSymbol('proto.shimmerGRPC.ObjectCluster2', null, global);
goog.exportSymbol('proto.shimmerGRPC.ObjectCluster2.CommunicationType', null, global);
goog.exportSymbol('proto.shimmerGRPC.ObjectCluster2.FormatCluster2', null, global);
goog.exportSymbol('proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2', null, global);
goog.exportSymbol('proto.shimmerGRPC.OperationRequest', null, global);
goog.exportSymbol('proto.shimmerGRPC.ShimmerRequest', null, global);
goog.exportSymbol('proto.shimmerGRPC.ShimmersInfo', null, global);
goog.exportSymbol('proto.shimmerGRPC.ShimmersInfo.ShimmerInfo', null, global);
goog.exportSymbol('proto.shimmerGRPC.StreamRequest', null, global);
goog.exportSymbol('proto.shimmerGRPC.StringArrayMsg', null, global);
goog.exportSymbol('proto.shimmerGRPC.StringMsg', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.FileByteTransfer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.FileByteTransfer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.FileByteTransfer.displayName = 'proto.shimmerGRPC.FileByteTransfer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.CommandStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.CommandStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.CommandStatus.displayName = 'proto.shimmerGRPC.CommandStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.HelloRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.HelloRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.HelloRequest.displayName = 'proto.shimmerGRPC.HelloRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.HelloReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.HelloReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.HelloReply.displayName = 'proto.shimmerGRPC.HelloReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.ShimmerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.ShimmerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.ShimmerRequest.displayName = 'proto.shimmerGRPC.ShimmerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.StreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.StreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.StreamRequest.displayName = 'proto.shimmerGRPC.StreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.ObjectCluster2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.ObjectCluster2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.ObjectCluster2.displayName = 'proto.shimmerGRPC.ObjectCluster2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.ObjectCluster2.FormatCluster2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.ObjectCluster2.FormatCluster2.displayName = 'proto.shimmerGRPC.ObjectCluster2.FormatCluster2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.repeatedFields_, null);
};
goog.inherits(proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.displayName = 'proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.StringMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.StringMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.StringMsg.displayName = 'proto.shimmerGRPC.StringMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.StringArrayMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.shimmerGRPC.StringArrayMsg.repeatedFields_, null);
};
goog.inherits(proto.shimmerGRPC.StringArrayMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.StringArrayMsg.displayName = 'proto.shimmerGRPC.StringArrayMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.BoolMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.BoolMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.BoolMsg.displayName = 'proto.shimmerGRPC.BoolMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.DoubleMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.DoubleMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.DoubleMsg.displayName = 'proto.shimmerGRPC.DoubleMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.OperationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.OperationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.OperationRequest.displayName = 'proto.shimmerGRPC.OperationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.ShimmersInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.ShimmersInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.ShimmersInfo.displayName = 'proto.shimmerGRPC.ShimmersInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.repeatedFields_, null);
};
goog.inherits(proto.shimmerGRPC.ShimmersInfo.ShimmerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.displayName = 'proto.shimmerGRPC.ShimmersInfo.ShimmerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.Ieee802154Info = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.Ieee802154Info, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.Ieee802154Info.displayName = 'proto.shimmerGRPC.Ieee802154Info';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.InfoSpans = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.InfoSpans, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.InfoSpans.displayName = 'proto.shimmerGRPC.InfoSpans';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.InfoSpans.InfoSpan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.InfoSpans.InfoSpan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.InfoSpans.InfoSpan.displayName = 'proto.shimmerGRPC.InfoSpans.InfoSpan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.EmulatedDevices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.shimmerGRPC.EmulatedDevices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.EmulatedDevices.displayName = 'proto.shimmerGRPC.EmulatedDevices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.repeatedFields_, null);
};
goog.inherits(proto.shimmerGRPC.EmulatedDevices.EmulatedDevice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.displayName = 'proto.shimmerGRPC.EmulatedDevices.EmulatedDevice';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.FileByteTransfer.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.FileByteTransfer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.FileByteTransfer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.FileByteTransfer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: msg.getData_asB64(),
    endoffile: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.FileByteTransfer}
 */
proto.shimmerGRPC.FileByteTransfer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.FileByteTransfer;
  return proto.shimmerGRPC.FileByteTransfer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.FileByteTransfer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.FileByteTransfer}
 */
proto.shimmerGRPC.FileByteTransfer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEndoffile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.FileByteTransfer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.FileByteTransfer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.FileByteTransfer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.FileByteTransfer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getEndoffile();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.shimmerGRPC.FileByteTransfer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.FileByteTransfer} returns this
 */
proto.shimmerGRPC.FileByteTransfer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.shimmerGRPC.FileByteTransfer.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.shimmerGRPC.FileByteTransfer.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.FileByteTransfer.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.shimmerGRPC.FileByteTransfer} returns this
 */
proto.shimmerGRPC.FileByteTransfer.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bool endoffile = 3;
 * @return {boolean}
 */
proto.shimmerGRPC.FileByteTransfer.prototype.getEndoffile = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.shimmerGRPC.FileByteTransfer} returns this
 */
proto.shimmerGRPC.FileByteTransfer.prototype.setEndoffile = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.CommandStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.CommandStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.CommandStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.CommandStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.CommandStatus}
 */
proto.shimmerGRPC.CommandStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.CommandStatus;
  return proto.shimmerGRPC.CommandStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.CommandStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.CommandStatus}
 */
proto.shimmerGRPC.CommandStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.CommandStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.CommandStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.CommandStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.CommandStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.shimmerGRPC.CommandStatus.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.CommandStatus} returns this
 */
proto.shimmerGRPC.CommandStatus.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.HelloRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.HelloRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.HelloRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.HelloRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.HelloRequest}
 */
proto.shimmerGRPC.HelloRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.HelloRequest;
  return proto.shimmerGRPC.HelloRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.HelloRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.HelloRequest}
 */
proto.shimmerGRPC.HelloRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.HelloRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.HelloRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.HelloRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.HelloRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.shimmerGRPC.HelloRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.HelloRequest} returns this
 */
proto.shimmerGRPC.HelloRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.HelloReply.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.HelloReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.HelloReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.HelloReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.HelloReply}
 */
proto.shimmerGRPC.HelloReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.HelloReply;
  return proto.shimmerGRPC.HelloReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.HelloReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.HelloReply}
 */
proto.shimmerGRPC.HelloReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.HelloReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.HelloReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.HelloReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.HelloReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.shimmerGRPC.HelloReply.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.HelloReply} returns this
 */
proto.shimmerGRPC.HelloReply.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.ShimmerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.ShimmerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.ShimmerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ShimmerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.ShimmerRequest}
 */
proto.shimmerGRPC.ShimmerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.ShimmerRequest;
  return proto.shimmerGRPC.ShimmerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.ShimmerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.ShimmerRequest}
 */
proto.shimmerGRPC.ShimmerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.ShimmerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.ShimmerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.ShimmerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ShimmerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.shimmerGRPC.ShimmerRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmerRequest} returns this
 */
proto.shimmerGRPC.ShimmerRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.StreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.StreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.StreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.StreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.StreamRequest}
 */
proto.shimmerGRPC.StreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.StreamRequest;
  return proto.shimmerGRPC.StreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.StreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.StreamRequest}
 */
proto.shimmerGRPC.StreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.StreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.StreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.StreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.StreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.shimmerGRPC.StreamRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.StreamRequest} returns this
 */
proto.shimmerGRPC.StreamRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.ObjectCluster2.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.ObjectCluster2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.ObjectCluster2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ObjectCluster2.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bluetoothaddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    communicationtype: jspb.Message.getFieldWithDefault(msg, 3, 0),
    datamapMap: (f = msg.getDatamapMap()) ? f.toObject(includeInstance, proto.shimmerGRPC.ObjectCluster2.FormatCluster2.toObject) : [],
    systemtime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    calibratedtimestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.ObjectCluster2}
 */
proto.shimmerGRPC.ObjectCluster2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.ObjectCluster2;
  return proto.shimmerGRPC.ObjectCluster2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.ObjectCluster2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.ObjectCluster2}
 */
proto.shimmerGRPC.ObjectCluster2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBluetoothaddress(value);
      break;
    case 3:
      var value = /** @type {!proto.shimmerGRPC.ObjectCluster2.CommunicationType} */ (reader.readEnum());
      msg.setCommunicationtype(value);
      break;
    case 4:
      var value = msg.getDatamapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.shimmerGRPC.ObjectCluster2.FormatCluster2.deserializeBinaryFromReader, "", new proto.shimmerGRPC.ObjectCluster2.FormatCluster2());
         });
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSystemtime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCalibratedtimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.ObjectCluster2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.ObjectCluster2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.ObjectCluster2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ObjectCluster2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBluetoothaddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommunicationtype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getDatamapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.shimmerGRPC.ObjectCluster2.FormatCluster2.serializeBinaryToWriter);
  }
  f = message.getSystemtime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getCalibratedtimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.shimmerGRPC.ObjectCluster2.CommunicationType = {
  BT: 0,
  SD: 1,
  RADIO_802_15_4: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.ObjectCluster2.FormatCluster2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.toObject = function(includeInstance, msg) {
  var f, obj = {
    formatmapMap: (f = msg.getFormatmapMap()) ? f.toObject(includeInstance, proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.ObjectCluster2.FormatCluster2;
  return proto.shimmerGRPC.ObjectCluster2.FormatCluster2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getFormatmapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.deserializeBinaryFromReader, "", new proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.ObjectCluster2.FormatCluster2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFormatmapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.serializeBinaryToWriter);
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.toObject = function(includeInstance, msg) {
  var f, obj = {
    unit: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    dataarrayList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2;
  return proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setDataarrayList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnit();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getDataarrayList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
};


/**
 * optional string unit = 1;
 * @return {string}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.prototype.getUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.prototype.setUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double data = 2;
 * @return {number}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.prototype.getData = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.prototype.setData = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * repeated double dataArray = 3;
 * @return {!Array<number>}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.prototype.getDataarrayList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.prototype.setDataarrayList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.prototype.addDataarray = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2.prototype.clearDataarrayList = function() {
  return this.setDataarrayList([]);
};


/**
 * map<string, DataCluster2> formatMap = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2>}
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.prototype.getFormatmapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.shimmerGRPC.ObjectCluster2.FormatCluster2.DataCluster2));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.shimmerGRPC.ObjectCluster2.FormatCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.FormatCluster2.prototype.clearFormatmapMap = function() {
  this.getFormatmapMap().clear();
  return this;};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.shimmerGRPC.ObjectCluster2.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ObjectCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bluetoothAddress = 2;
 * @return {string}
 */
proto.shimmerGRPC.ObjectCluster2.prototype.getBluetoothaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ObjectCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.prototype.setBluetoothaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CommunicationType communicationType = 3;
 * @return {!proto.shimmerGRPC.ObjectCluster2.CommunicationType}
 */
proto.shimmerGRPC.ObjectCluster2.prototype.getCommunicationtype = function() {
  return /** @type {!proto.shimmerGRPC.ObjectCluster2.CommunicationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.shimmerGRPC.ObjectCluster2.CommunicationType} value
 * @return {!proto.shimmerGRPC.ObjectCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.prototype.setCommunicationtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * map<string, FormatCluster2> dataMap = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.shimmerGRPC.ObjectCluster2.FormatCluster2>}
 */
proto.shimmerGRPC.ObjectCluster2.prototype.getDatamapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.shimmerGRPC.ObjectCluster2.FormatCluster2>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.shimmerGRPC.ObjectCluster2.FormatCluster2));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.shimmerGRPC.ObjectCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.prototype.clearDatamapMap = function() {
  this.getDatamapMap().clear();
  return this;};


/**
 * optional int64 systemTime = 5;
 * @return {number}
 */
proto.shimmerGRPC.ObjectCluster2.prototype.getSystemtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.ObjectCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.prototype.setSystemtime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double calibratedTimeStamp = 6;
 * @return {number}
 */
proto.shimmerGRPC.ObjectCluster2.prototype.getCalibratedtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.ObjectCluster2} returns this
 */
proto.shimmerGRPC.ObjectCluster2.prototype.setCalibratedtimestamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.StringMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.StringMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.StringMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.StringMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.StringMsg}
 */
proto.shimmerGRPC.StringMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.StringMsg;
  return proto.shimmerGRPC.StringMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.StringMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.StringMsg}
 */
proto.shimmerGRPC.StringMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.StringMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.StringMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.StringMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.StringMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.shimmerGRPC.StringMsg.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.StringMsg} returns this
 */
proto.shimmerGRPC.StringMsg.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.shimmerGRPC.StringArrayMsg.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.StringArrayMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.StringArrayMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.StringArrayMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.StringArrayMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagearrayList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.StringArrayMsg}
 */
proto.shimmerGRPC.StringArrayMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.StringArrayMsg;
  return proto.shimmerGRPC.StringArrayMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.StringArrayMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.StringArrayMsg}
 */
proto.shimmerGRPC.StringArrayMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMessagearray(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.StringArrayMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.StringArrayMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.StringArrayMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.StringArrayMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagearrayList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string messageArray = 1;
 * @return {!Array<string>}
 */
proto.shimmerGRPC.StringArrayMsg.prototype.getMessagearrayList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.shimmerGRPC.StringArrayMsg} returns this
 */
proto.shimmerGRPC.StringArrayMsg.prototype.setMessagearrayList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.shimmerGRPC.StringArrayMsg} returns this
 */
proto.shimmerGRPC.StringArrayMsg.prototype.addMessagearray = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.shimmerGRPC.StringArrayMsg} returns this
 */
proto.shimmerGRPC.StringArrayMsg.prototype.clearMessagearrayList = function() {
  return this.setMessagearrayList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.BoolMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.BoolMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.BoolMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.BoolMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.BoolMsg}
 */
proto.shimmerGRPC.BoolMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.BoolMsg;
  return proto.shimmerGRPC.BoolMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.BoolMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.BoolMsg}
 */
proto.shimmerGRPC.BoolMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.BoolMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.BoolMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.BoolMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.BoolMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool state = 1;
 * @return {boolean}
 */
proto.shimmerGRPC.BoolMsg.prototype.getState = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.shimmerGRPC.BoolMsg} returns this
 */
proto.shimmerGRPC.BoolMsg.prototype.setState = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.DoubleMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.DoubleMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.DoubleMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.DoubleMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    number: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.DoubleMsg}
 */
proto.shimmerGRPC.DoubleMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.DoubleMsg;
  return proto.shimmerGRPC.DoubleMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.DoubleMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.DoubleMsg}
 */
proto.shimmerGRPC.DoubleMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.DoubleMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.DoubleMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.DoubleMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.DoubleMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double number = 1;
 * @return {number}
 */
proto.shimmerGRPC.DoubleMsg.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.DoubleMsg} returns this
 */
proto.shimmerGRPC.DoubleMsg.prototype.setNumber = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.OperationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.OperationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.OperationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.OperationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    isfinished: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    progresspercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    progresspercentageparsed: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.OperationRequest}
 */
proto.shimmerGRPC.OperationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.OperationRequest;
  return proto.shimmerGRPC.OperationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.OperationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.OperationRequest}
 */
proto.shimmerGRPC.OperationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsfinished(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProgresspercentage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgresspercentageparsed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.OperationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.OperationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.OperationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.OperationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsfinished();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProgresspercentage();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getProgresspercentageparsed();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool isFinished = 1;
 * @return {boolean}
 */
proto.shimmerGRPC.OperationRequest.prototype.getIsfinished = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.shimmerGRPC.OperationRequest} returns this
 */
proto.shimmerGRPC.OperationRequest.prototype.setIsfinished = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool isSuccess = 2;
 * @return {boolean}
 */
proto.shimmerGRPC.OperationRequest.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.shimmerGRPC.OperationRequest} returns this
 */
proto.shimmerGRPC.OperationRequest.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.shimmerGRPC.OperationRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.OperationRequest} returns this
 */
proto.shimmerGRPC.OperationRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double progressPercentage = 4;
 * @return {number}
 */
proto.shimmerGRPC.OperationRequest.prototype.getProgresspercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.OperationRequest} returns this
 */
proto.shimmerGRPC.OperationRequest.prototype.setProgresspercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string progressPercentageParsed = 5;
 * @return {string}
 */
proto.shimmerGRPC.OperationRequest.prototype.getProgresspercentageparsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.OperationRequest} returns this
 */
proto.shimmerGRPC.OperationRequest.prototype.setProgresspercentageparsed = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.ShimmersInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.ShimmersInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.ShimmersInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ShimmersInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    shimmermapMap: (f = msg.getShimmermapMap()) ? f.toObject(includeInstance, proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.ShimmersInfo}
 */
proto.shimmerGRPC.ShimmersInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.ShimmersInfo;
  return proto.shimmerGRPC.ShimmersInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.ShimmersInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.ShimmersInfo}
 */
proto.shimmerGRPC.ShimmersInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = msg.getShimmermapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.deserializeBinaryFromReader, "", new proto.shimmerGRPC.ShimmersInfo.ShimmerInfo());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.ShimmersInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.ShimmersInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.ShimmersInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ShimmersInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getShimmermapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.serializeBinaryToWriter);
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.repeatedFields_ = [18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uniqueid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bluetoothaddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    trialname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    batterypercentageparsed: jspb.Message.getFieldWithDefault(msg, 5, ""),
    batterypercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    chargingstatusparsed: jspb.Message.getFieldWithDefault(msg, 7, ""),
    drivecapacity: jspb.Message.getFieldWithDefault(msg, 8, 0),
    drivespaceused: jspb.Message.getFieldWithDefault(msg, 9, 0),
    drivespacefree: jspb.Message.getFieldWithDefault(msg, 10, 0),
    drivecapacityparsed: jspb.Message.getFieldWithDefault(msg, 11, ""),
    isrealtimeclockset: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    lastreadrtcvaluemillisecs: jspb.Message.getFieldWithDefault(msg, 13, 0),
    lastreadrtcvalueparsed: jspb.Message.getFieldWithDefault(msg, 14, ""),
    hwversionparsed: jspb.Message.getFieldWithDefault(msg, 15, ""),
    expbrdversionparsed: jspb.Message.getFieldWithDefault(msg, 16, ""),
    fwversionparsed: jspb.Message.getFieldWithDefault(msg, 17, ""),
    paireddeviceList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    configtime: jspb.Message.getFieldWithDefault(msg, 19, 0),
    configtimeparsed: jspb.Message.getFieldWithDefault(msg, 20, ""),
    ieee802154info: (f = msg.getIeee802154info()) && proto.shimmerGRPC.Ieee802154Info.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.ShimmersInfo.ShimmerInfo;
  return proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBluetoothaddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrialname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatterypercentageparsed(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBatterypercentage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setChargingstatusparsed(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDrivecapacity(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDrivespaceused(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDrivespacefree(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDrivecapacityparsed(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsrealtimeclockset(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastreadrtcvaluemillisecs(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastreadrtcvalueparsed(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setHwversionparsed(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpbrdversionparsed(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setFwversionparsed(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addPaireddevice(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setConfigtime(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigtimeparsed(value);
      break;
    case 21:
      var value = new proto.shimmerGRPC.Ieee802154Info;
      reader.readMessage(value,proto.shimmerGRPC.Ieee802154Info.deserializeBinaryFromReader);
      msg.setIeee802154info(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUniqueid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBluetoothaddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTrialname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBatterypercentageparsed();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBatterypercentage();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getChargingstatusparsed();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDrivecapacity();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getDrivespaceused();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getDrivespacefree();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getDrivecapacityparsed();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getIsrealtimeclockset();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getLastreadrtcvaluemillisecs();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getLastreadrtcvalueparsed();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getHwversionparsed();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getExpbrdversionparsed();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getFwversionparsed();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getPaireddeviceList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
  f = message.getConfigtime();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = message.getConfigtimeparsed();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getIeee802154info();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.shimmerGRPC.Ieee802154Info.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uniqueId = 2;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getUniqueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setUniqueid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bluetoothAddress = 3;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getBluetoothaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setBluetoothaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string trialName = 4;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getTrialname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setTrialname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string batteryPercentageParsed = 5;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getBatterypercentageparsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setBatterypercentageparsed = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double batteryPercentage = 6;
 * @return {number}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getBatterypercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setBatterypercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string chargingStatusParsed = 7;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getChargingstatusparsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setChargingstatusparsed = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 driveCapacity = 8;
 * @return {number}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getDrivecapacity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setDrivecapacity = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 driveSpaceUsed = 9;
 * @return {number}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getDrivespaceused = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setDrivespaceused = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 driveSpaceFree = 10;
 * @return {number}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getDrivespacefree = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setDrivespacefree = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string driveCapacityParsed = 11;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getDrivecapacityparsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setDrivecapacityparsed = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool isRealTimeClockSet = 12;
 * @return {boolean}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getIsrealtimeclockset = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setIsrealtimeclockset = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional int64 lastReadRtcValueMilliSecs = 13;
 * @return {number}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getLastreadrtcvaluemillisecs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setLastreadrtcvaluemillisecs = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string lastReadRtcValueParsed = 14;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getLastreadrtcvalueparsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setLastreadrtcvalueparsed = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string hwVersionParsed = 15;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getHwversionparsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setHwversionparsed = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string expBrdVersionParsed = 16;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getExpbrdversionparsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setExpbrdversionparsed = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string fwVersionParsed = 17;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getFwversionparsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setFwversionparsed = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * repeated string pairedDevice = 18;
 * @return {!Array<string>}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getPaireddeviceList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setPaireddeviceList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.addPaireddevice = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.clearPaireddeviceList = function() {
  return this.setPaireddeviceList([]);
};


/**
 * optional int64 configTime = 19;
 * @return {number}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getConfigtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setConfigtime = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional string configTimeParsed = 20;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getConfigtimeparsed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setConfigtimeparsed = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional Ieee802154Info ieee802154Info = 21;
 * @return {?proto.shimmerGRPC.Ieee802154Info}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.getIeee802154info = function() {
  return /** @type{?proto.shimmerGRPC.Ieee802154Info} */ (
    jspb.Message.getWrapperField(this, proto.shimmerGRPC.Ieee802154Info, 21));
};


/**
 * @param {?proto.shimmerGRPC.Ieee802154Info|undefined} value
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
*/
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.setIeee802154info = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.clearIeee802154info = function() {
  return this.setIeee802154info(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.shimmerGRPC.ShimmersInfo.ShimmerInfo.prototype.hasIeee802154info = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool state = 1;
 * @return {boolean}
 */
proto.shimmerGRPC.ShimmersInfo.prototype.getState = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.shimmerGRPC.ShimmersInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.prototype.setState = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.shimmerGRPC.ShimmersInfo.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.ShimmersInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, ShimmerInfo> shimmerMap = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo>}
 */
proto.shimmerGRPC.ShimmersInfo.prototype.getShimmermapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.shimmerGRPC.ShimmersInfo.ShimmerInfo>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.shimmerGRPC.ShimmersInfo.ShimmerInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.shimmerGRPC.ShimmersInfo} returns this
 */
proto.shimmerGRPC.ShimmersInfo.prototype.clearShimmermapMap = function() {
  this.getShimmermapMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.Ieee802154Info.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.Ieee802154Info.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.Ieee802154Info} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.Ieee802154Info.toObject = function(includeInstance, msg) {
  var f, obj = {
    radiochannel: jspb.Message.getFieldWithDefault(msg, 1, 0),
    radiogroupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    radiodeviceid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.Ieee802154Info}
 */
proto.shimmerGRPC.Ieee802154Info.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.Ieee802154Info;
  return proto.shimmerGRPC.Ieee802154Info.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.Ieee802154Info} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.Ieee802154Info}
 */
proto.shimmerGRPC.Ieee802154Info.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRadiochannel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRadiogroupid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRadiodeviceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.Ieee802154Info.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.Ieee802154Info.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.Ieee802154Info} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.Ieee802154Info.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRadiochannel();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRadiogroupid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRadiodeviceid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 radioChannel = 1;
 * @return {number}
 */
proto.shimmerGRPC.Ieee802154Info.prototype.getRadiochannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.Ieee802154Info} returns this
 */
proto.shimmerGRPC.Ieee802154Info.prototype.setRadiochannel = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 radioGroupId = 2;
 * @return {number}
 */
proto.shimmerGRPC.Ieee802154Info.prototype.getRadiogroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.Ieee802154Info} returns this
 */
proto.shimmerGRPC.Ieee802154Info.prototype.setRadiogroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 radioDeviceId = 3;
 * @return {number}
 */
proto.shimmerGRPC.Ieee802154Info.prototype.getRadiodeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.Ieee802154Info} returns this
 */
proto.shimmerGRPC.Ieee802154Info.prototype.setRadiodeviceid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.InfoSpans.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.InfoSpans.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.InfoSpans} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.InfoSpans.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    spanmapMap: (f = msg.getSpanmapMap()) ? f.toObject(includeInstance, proto.shimmerGRPC.InfoSpans.InfoSpan.toObject) : [],
    ieee802154info: (f = msg.getIeee802154info()) && proto.shimmerGRPC.Ieee802154Info.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.InfoSpans}
 */
proto.shimmerGRPC.InfoSpans.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.InfoSpans;
  return proto.shimmerGRPC.InfoSpans.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.InfoSpans} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.InfoSpans}
 */
proto.shimmerGRPC.InfoSpans.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = msg.getSpanmapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.shimmerGRPC.InfoSpans.InfoSpan.deserializeBinaryFromReader, "", new proto.shimmerGRPC.InfoSpans.InfoSpan());
         });
      break;
    case 4:
      var value = new proto.shimmerGRPC.Ieee802154Info;
      reader.readMessage(value,proto.shimmerGRPC.Ieee802154Info.deserializeBinaryFromReader);
      msg.setIeee802154info(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.InfoSpans.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.InfoSpans.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.InfoSpans} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.InfoSpans.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpanmapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.shimmerGRPC.InfoSpans.InfoSpan.serializeBinaryToWriter);
  }
  f = message.getIeee802154info();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.shimmerGRPC.Ieee802154Info.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.InfoSpans.InfoSpan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.InfoSpans.InfoSpan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.toObject = function(includeInstance, msg) {
  var f, obj = {
    uniqueid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    portbsl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    portcomms: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.InfoSpans.InfoSpan}
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.InfoSpans.InfoSpan;
  return proto.shimmerGRPC.InfoSpans.InfoSpan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.InfoSpans.InfoSpan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.InfoSpans.InfoSpan}
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortbsl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortcomms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.InfoSpans.InfoSpan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.InfoSpans.InfoSpan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUniqueid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPortbsl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPortcomms();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string uniqueId = 1;
 * @return {string}
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.prototype.getUniqueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.InfoSpans.InfoSpan} returns this
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.prototype.setUniqueid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string portBsl = 2;
 * @return {string}
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.prototype.getPortbsl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.InfoSpans.InfoSpan} returns this
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.prototype.setPortbsl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string portComms = 3;
 * @return {string}
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.prototype.getPortcomms = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.InfoSpans.InfoSpan} returns this
 */
proto.shimmerGRPC.InfoSpans.InfoSpan.prototype.setPortcomms = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool state = 1;
 * @return {boolean}
 */
proto.shimmerGRPC.InfoSpans.prototype.getState = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.shimmerGRPC.InfoSpans} returns this
 */
proto.shimmerGRPC.InfoSpans.prototype.setState = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.shimmerGRPC.InfoSpans.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.InfoSpans} returns this
 */
proto.shimmerGRPC.InfoSpans.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, InfoSpan> spanMap = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.shimmerGRPC.InfoSpans.InfoSpan>}
 */
proto.shimmerGRPC.InfoSpans.prototype.getSpanmapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.shimmerGRPC.InfoSpans.InfoSpan>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.shimmerGRPC.InfoSpans.InfoSpan));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.shimmerGRPC.InfoSpans} returns this
 */
proto.shimmerGRPC.InfoSpans.prototype.clearSpanmapMap = function() {
  this.getSpanmapMap().clear();
  return this;};


/**
 * optional Ieee802154Info ieee802154Info = 4;
 * @return {?proto.shimmerGRPC.Ieee802154Info}
 */
proto.shimmerGRPC.InfoSpans.prototype.getIeee802154info = function() {
  return /** @type{?proto.shimmerGRPC.Ieee802154Info} */ (
    jspb.Message.getWrapperField(this, proto.shimmerGRPC.Ieee802154Info, 4));
};


/**
 * @param {?proto.shimmerGRPC.Ieee802154Info|undefined} value
 * @return {!proto.shimmerGRPC.InfoSpans} returns this
*/
proto.shimmerGRPC.InfoSpans.prototype.setIeee802154info = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.shimmerGRPC.InfoSpans} returns this
 */
proto.shimmerGRPC.InfoSpans.prototype.clearIeee802154info = function() {
  return this.setIeee802154info(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.shimmerGRPC.InfoSpans.prototype.hasIeee802154info = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.EmulatedDevices.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.EmulatedDevices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.EmulatedDevices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.EmulatedDevices.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isemulatorside: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    emulateddevicesmapMap: (f = msg.getEmulateddevicesmapMap()) ? f.toObject(includeInstance, proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.EmulatedDevices}
 */
proto.shimmerGRPC.EmulatedDevices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.EmulatedDevices;
  return proto.shimmerGRPC.EmulatedDevices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.EmulatedDevices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.EmulatedDevices}
 */
proto.shimmerGRPC.EmulatedDevices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsemulatorside(value);
      break;
    case 4:
      var value = msg.getEmulateddevicesmapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.deserializeBinaryFromReader, "", new proto.shimmerGRPC.EmulatedDevices.EmulatedDevice());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.EmulatedDevices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.EmulatedDevices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.EmulatedDevices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.EmulatedDevices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsemulatorside();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getEmulateddevicesmapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.serializeBinaryToWriter);
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.toObject = function(opt_includeInstance) {
  return proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.toObject = function(includeInstance, msg) {
  var f, obj = {
    uniqueid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    devicetypeordinal: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hwdeviceinterfacepathList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    isdeviceenabled: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice}
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.shimmerGRPC.EmulatedDevices.EmulatedDevice;
  return proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice}
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDevicetypeordinal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addHwdeviceinterfacepath(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdeviceenabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUniqueid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDevicetypeordinal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHwdeviceinterfacepathList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getIsdeviceenabled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string uniqueId = 1;
 * @return {string}
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.getUniqueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice} returns this
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.setUniqueid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 deviceTypeOrdinal = 2;
 * @return {number}
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.getDevicetypeordinal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice} returns this
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.setDevicetypeordinal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated string hwDeviceInterfacePath = 3;
 * @return {!Array<string>}
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.getHwdeviceinterfacepathList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice} returns this
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.setHwdeviceinterfacepathList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice} returns this
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.addHwdeviceinterfacepath = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice} returns this
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.clearHwdeviceinterfacepathList = function() {
  return this.setHwdeviceinterfacepathList([]);
};


/**
 * optional bool isDeviceEnabled = 4;
 * @return {boolean}
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.getIsdeviceenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice} returns this
 */
proto.shimmerGRPC.EmulatedDevices.EmulatedDevice.prototype.setIsdeviceenabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool state = 1;
 * @return {boolean}
 */
proto.shimmerGRPC.EmulatedDevices.prototype.getState = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.shimmerGRPC.EmulatedDevices} returns this
 */
proto.shimmerGRPC.EmulatedDevices.prototype.setState = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.shimmerGRPC.EmulatedDevices.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.shimmerGRPC.EmulatedDevices} returns this
 */
proto.shimmerGRPC.EmulatedDevices.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isEmulatorSide = 3;
 * @return {boolean}
 */
proto.shimmerGRPC.EmulatedDevices.prototype.getIsemulatorside = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.shimmerGRPC.EmulatedDevices} returns this
 */
proto.shimmerGRPC.EmulatedDevices.prototype.setIsemulatorside = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * map<string, EmulatedDevice> emulatedDevicesMap = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice>}
 */
proto.shimmerGRPC.EmulatedDevices.prototype.getEmulateddevicesmapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.shimmerGRPC.EmulatedDevices.EmulatedDevice>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.shimmerGRPC.EmulatedDevices.EmulatedDevice));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.shimmerGRPC.EmulatedDevices} returns this
 */
proto.shimmerGRPC.EmulatedDevices.prototype.clearEmulateddevicesmapMap = function() {
  this.getEmulateddevicesmapMap().clear();
  return this;};


goog.object.extend(exports, proto.shimmerGRPC);
