// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/ShimmerGrpcAndOJC.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace com.shimmerresearch.grpc {
  /// <summary>
  ///  The greeter service definition.
  /// </summary>
  public static class ShimmerServer
  {
    static readonly string __ServiceName = "shimmerGRPC.ShimmerServer";

    static readonly Marshaller<global::com.shimmerresearch.grpc.HelloRequest> __Marshaller_HelloRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::com.shimmerresearch.grpc.HelloRequest.Parser.ParseFrom);
    static readonly Marshaller<global::com.shimmerresearch.grpc.HelloReply> __Marshaller_HelloReply = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::com.shimmerresearch.grpc.HelloReply.Parser.ParseFrom);
    static readonly Marshaller<global::com.shimmerresearch.grpc.StreamRequest> __Marshaller_StreamRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::com.shimmerresearch.grpc.StreamRequest.Parser.ParseFrom);
    static readonly Marshaller<global::com.shimmerresearch.grpc.ObjectCluster2> __Marshaller_ObjectCluster2 = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::com.shimmerresearch.grpc.ObjectCluster2.Parser.ParseFrom);

    static readonly Method<global::com.shimmerresearch.grpc.HelloRequest, global::com.shimmerresearch.grpc.HelloReply> __Method_SayHello = new Method<global::com.shimmerresearch.grpc.HelloRequest, global::com.shimmerresearch.grpc.HelloReply>(
        MethodType.Unary,
        __ServiceName,
        "SayHello",
        __Marshaller_HelloRequest,
        __Marshaller_HelloReply);

    static readonly Method<global::com.shimmerresearch.grpc.StreamRequest, global::com.shimmerresearch.grpc.ObjectCluster2> __Method_GetDataStream = new Method<global::com.shimmerresearch.grpc.StreamRequest, global::com.shimmerresearch.grpc.ObjectCluster2>(
        MethodType.ServerStreaming,
        __ServiceName,
        "GetDataStream",
        __Marshaller_StreamRequest,
        __Marshaller_ObjectCluster2);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for ShimmerServer</summary>
    [System.Obsolete("Client side interfaced will be removed in the next release. Use client class directly.")]
    public interface IShimmerServerClient
    {
      /// <summary>
      ///  Sends a greeting
      /// </summary>
      global::com.shimmerresearch.grpc.HelloReply SayHello(global::com.shimmerresearch.grpc.HelloRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      /// <summary>
      ///  Sends a greeting
      /// </summary>
      global::com.shimmerresearch.grpc.HelloReply SayHello(global::com.shimmerresearch.grpc.HelloRequest request, CallOptions options);
      /// <summary>
      ///  Sends a greeting
      /// </summary>
      AsyncUnaryCall<global::com.shimmerresearch.grpc.HelloReply> SayHelloAsync(global::com.shimmerresearch.grpc.HelloRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      /// <summary>
      ///  Sends a greeting
      /// </summary>
      AsyncUnaryCall<global::com.shimmerresearch.grpc.HelloReply> SayHelloAsync(global::com.shimmerresearch.grpc.HelloRequest request, CallOptions options);
      AsyncServerStreamingCall<global::com.shimmerresearch.grpc.ObjectCluster2> GetDataStream(global::com.shimmerresearch.grpc.StreamRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncServerStreamingCall<global::com.shimmerresearch.grpc.ObjectCluster2> GetDataStream(global::com.shimmerresearch.grpc.StreamRequest request, CallOptions options);
    }

    /// <summary>Interface of server-side implementations of ShimmerServer</summary>
    [System.Obsolete("Service implementations should inherit from the generated abstract base class instead.")]
    public interface IShimmerServer
    {
      /// <summary>
      ///  Sends a greeting
      /// </summary>
      global::System.Threading.Tasks.Task<global::com.shimmerresearch.grpc.HelloReply> SayHello(global::com.shimmerresearch.grpc.HelloRequest request, ServerCallContext context);
      global::System.Threading.Tasks.Task GetDataStream(global::com.shimmerresearch.grpc.StreamRequest request, IServerStreamWriter<global::com.shimmerresearch.grpc.ObjectCluster2> responseStream, ServerCallContext context);
    }

    /// <summary>Base class for server-side implementations of ShimmerServer</summary>
    public abstract class ShimmerServerBase
    {
      /// <summary>
      ///  Sends a greeting
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::com.shimmerresearch.grpc.HelloReply> SayHello(global::com.shimmerresearch.grpc.HelloRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetDataStream(global::com.shimmerresearch.grpc.StreamRequest request, IServerStreamWriter<global::com.shimmerresearch.grpc.ObjectCluster2> responseStream, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ShimmerServer</summary>
    #pragma warning disable 0618
    public class ShimmerServerClient : ClientBase<ShimmerServerClient>, IShimmerServerClient
    #pragma warning restore 0618
    {
      public ShimmerServerClient(Channel channel) : base(channel)
      {
      }
      public ShimmerServerClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      ///<summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ShimmerServerClient() : base()
      {
      }
      ///<summary>Protected constructor to allow creation of configured clients.</summary>
      protected ShimmerServerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Sends a greeting
      /// </summary>
      public virtual global::com.shimmerresearch.grpc.HelloReply SayHello(global::com.shimmerresearch.grpc.HelloRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SayHello(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Sends a greeting
      /// </summary>
      public virtual global::com.shimmerresearch.grpc.HelloReply SayHello(global::com.shimmerresearch.grpc.HelloRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SayHello, null, options, request);
      }
      /// <summary>
      ///  Sends a greeting
      /// </summary>
      public virtual AsyncUnaryCall<global::com.shimmerresearch.grpc.HelloReply> SayHelloAsync(global::com.shimmerresearch.grpc.HelloRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SayHelloAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Sends a greeting
      /// </summary>
      public virtual AsyncUnaryCall<global::com.shimmerresearch.grpc.HelloReply> SayHelloAsync(global::com.shimmerresearch.grpc.HelloRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SayHello, null, options, request);
      }
      public virtual AsyncServerStreamingCall<global::com.shimmerresearch.grpc.ObjectCluster2> GetDataStream(global::com.shimmerresearch.grpc.StreamRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetDataStream(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncServerStreamingCall<global::com.shimmerresearch.grpc.ObjectCluster2> GetDataStream(global::com.shimmerresearch.grpc.StreamRequest request, CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetDataStream, null, options, request);
      }
      protected override ShimmerServerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ShimmerServerClient(configuration);
      }
    }

    /// <summary>Creates a new client for ShimmerServer</summary>
    public static ShimmerServerClient NewClient(Channel channel)
    {
      return new ShimmerServerClient(channel);
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    #pragma warning disable 0618
    public static ServerServiceDefinition BindService(IShimmerServer serviceImpl)
    #pragma warning restore 0618
    {
      return ServerServiceDefinition.CreateBuilder(__ServiceName)
          .AddMethod(__Method_SayHello, serviceImpl.SayHello)
          .AddMethod(__Method_GetDataStream, serviceImpl.GetDataStream).Build();
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    #pragma warning disable 0618
    public static ServerServiceDefinition BindService(ShimmerServerBase serviceImpl)
    #pragma warning restore 0618
    {
      return ServerServiceDefinition.CreateBuilder(__ServiceName)
          .AddMethod(__Method_SayHello, serviceImpl.SayHello)
          .AddMethod(__Method_GetDataStream, serviceImpl.GetDataStream).Build();
    }

  }
}
#endregion
